// scripts/export-templates.js
const fs = require('fs');
const path = require('path');

// Prisma ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î•º Îçî ÏïàÏ†ÑÌïòÍ≤å Ï¥àÍ∏∞Ìôî
let prisma;
try {
  const { PrismaClient } = require('@prisma/client');
  prisma = new PrismaClient({
    log: ['query', 'info', 'warn', 'error'],
  });
} catch (error) {
  console.error('‚ùå Prisma ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Ï¥àÍ∏∞Ìôî Ïã§Ìå®:', error.message);
  process.exit(1);
}

async function exportTemplates() {
  try {
    console.log('üì§ ÌÖúÌîåÎ¶ø Îç∞Ïù¥ÌÑ∞ export ÏãúÏûë...');
    
    // Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌÖåÏä§Ìä∏
    console.log('üîó Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ Ï§ë...');
    await prisma.$connect();
    console.log('‚úÖ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÏÑ±Í≥µ');
    
    // Í≥ÑÏïΩÏÑú ÌÖúÌîåÎ¶ø Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
    console.log('üìã Í≥ÑÏïΩÏÑú ÌÖúÌîåÎ¶ø Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå Ï§ë...');
    const contractTemplates = await prisma.contractTemplate.findMany({
      include: {
        user: {
          select: {
            id: true,
            email: true,
            name: true
          }
        }
      }
    });
    
    console.log(`‚úÖ ${contractTemplates.length}Í∞ú Í≥ÑÏïΩÏÑú ÌÖúÌîåÎ¶ø Î∞úÍ≤¨`);
    
    // Ï°∞Ìï≠ Ïπ¥ÌÖåÍ≥†Î¶¨ Îç∞Ïù¥ÌÑ∞ÎèÑ Í∞ÄÏ†∏Ïò§Í∏∞
    console.log('üè∑Ô∏è Ï°∞Ìï≠ Ïπ¥ÌÖåÍ≥†Î¶¨ Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå Ï§ë...');
    const clauseCategories = await prisma.clauseCategory.findMany();
    console.log(`‚úÖ ${clauseCategories.length}Í∞ú Ï°∞Ìï≠ Ïπ¥ÌÖåÍ≥†Î¶¨ Î∞úÍ≤¨`);
    
    // ÏÑúÎπÑÏä§ Ïπ¥ÌÖåÍ≥†Î¶¨ÎèÑ Í∞ÄÏ†∏Ïò§Í∏∞
    console.log('üéØ ÏÑúÎπÑÏä§ Ïπ¥ÌÖåÍ≥†Î¶¨ Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå Ï§ë...');
    const serviceCategories = await prisma.serviceCategory.findMany({
      include: {
        user: {
          select: {
            id: true,
            email: true,
            name: true
          }
        }
      }
    });
    console.log(`‚úÖ ${serviceCategories.length}Í∞ú ÏÑúÎπÑÏä§ Ïπ¥ÌÖåÍ≥†Î¶¨ Î∞úÍ≤¨`);
    
    // exportÌï† Îç∞Ïù¥ÌÑ∞ Íµ¨Ï°∞
    const exportData = {
      contractTemplates: contractTemplates,
      clauseCategories: clauseCategories,
      serviceCategories: serviceCategories,
      exportDate: new Date().toISOString(),
      exportSource: 'local-development',
      databaseType: 'mysql'
    };
    
    // JSON ÌååÏùºÎ°ú Ï†ÄÏû•
    const exportPath = path.join(process.cwd(), 'templates_export.json');
    fs.writeFileSync(exportPath, JSON.stringify(exportData, null, 2));
    
    console.log(`üéâ Export ÏôÑÎ£å!`);
    console.log(`üìÅ ÌååÏùº ÏúÑÏπò: ${exportPath}`);
    console.log(`üìä Export ÏöîÏïΩ:`);
    console.log(`   - Í≥ÑÏïΩÏÑú ÌÖúÌîåÎ¶ø: ${contractTemplates.length}Í∞ú`);
    console.log(`   - Ï°∞Ìï≠ Ïπ¥ÌÖåÍ≥†Î¶¨: ${clauseCategories.length}Í∞ú`);
    console.log(`   - ÏÑúÎπÑÏä§ Ïπ¥ÌÖåÍ≥†Î¶¨: ${serviceCategories.length}Í∞ú`);
    
    // Í∞Å ÌÖúÌîåÎ¶øÎ≥Ñ ÏÑ∏Î∂Ä Ï†ïÎ≥¥ Ï∂úÎ†•
    contractTemplates.forEach((template, index) => {
      console.log(`   ${index + 1}. ${template.name} (${template.category}) - ${template.countryCode}`);
    });
    
  } catch (error) {
    console.error('‚ùå Export Ïã§Ìå®:', error);
  } finally {
    await prisma.$disconnect();
  }
}

exportTemplates();